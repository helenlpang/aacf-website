{"ast":null,"code":"var _jsxFileName = \"/Users/myunginlee/Documents/projects/aacf-website/client/src/components/Church/ChurchList.js\";\nimport React from 'react';\nimport './ChurchList.css';\nimport Church from './Church';\nimport Map from '../Map/Map';\nlet churches = [{\n  id: 1,\n  name: 'Citylife',\n  url: React.createElement(\"a\", {\n    href: \"/citylife\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"Citylife\"),\n  denomination: 'Presbyterian',\n  address: '200 Stuart St, Boston, MA 02116',\n  times: '10:30am-12:00pm'\n}, {\n  id: 2,\n  name: 'Aletheia',\n  url: React.createElement(\"a\", {\n    href: \"/aletheia\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Aletheia\"),\n  denomination: 'Non-Denomination',\n  address: '820 Massachusetts Ave, Cambridge, MA 02139',\n  times: '9:00am-10:30am'\n}, {\n  id: 3,\n  name: 'Symphony',\n  url: React.createElement(\"a\", {\n    href: \"/symphony\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Symphony\"),\n  denomination: 'Non-Denomination',\n  address: '971 Commonwealth Avenue, Boston, MA 02215',\n  times: '11:00am-12:30pm'\n}, {\n  id: 4,\n  name: 'St. Paul',\n  url: React.createElement(\"a\", {\n    href: \"https://stpaulparish.org/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"St. Paul\"),\n  denomination: 'Catholic',\n  address: '29 Mt Auburn St, Cambridge, MA 02138',\n  times: '9:30am-12:00pm'\n}, {\n  id: 5,\n  name: 'Cambridge Community Church Fellowship (CCFC)',\n  url: React.createElement(\"a\", {\n    href: \"https://ccfc-church.org/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Cambridge Community Church Fellowship (CCFC)\"),\n  denomination: 'Evangelical',\n  address: '234 Franklin St, Cambridge, MA 02139',\n  times: '1:00pm-2:30pm'\n}, {\n  id: 6,\n  name: 'Highrock Church',\n  url: React.createElement(\"a\", {\n    href: \"https://www.highrockcambridge.org/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Highrock Church\"),\n  denomination: 'Evangelical',\n  address: '50 Quincy St, Cambridge, MA 02139',\n  times: '9:00am-10:30am'\n}, {\n  id: 7,\n  name: 'Park Street Church',\n  url: React.createElement(\"a\", {\n    href: \"https://www.parkstreet.org/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Park Street Church\"),\n  denomination: 'Evangelical',\n  address: '1 Park St, Boston, MA 02108',\n  times: '10:30am-12:00pm'\n}, {\n  id: 8,\n  name: 'Pentecostal Tabernacle',\n  url: React.createElement(\"a\", {\n    href: \"http://ptspice.org/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Pentecostal Tabernacle\"),\n  denomination: 'Assemblies of God',\n  address: '56 Magazine St, Cambridge, MA 02139',\n  times: '8:30am-10:00am'\n}, {\n  id: 9,\n  name: 'Hope Fellowship Church',\n  url: React.createElement(\"a\", {\n    href: \"https://www.hopefellowshipchurch.org/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Hope Fellowship Church\"),\n  denomination: 'Baptist',\n  address: '16 Beech St, Cambridge, MA 02140',\n  times: '11:00am-12:30pm'\n}, {\n  id: 10,\n  name: 'Hillsong Church Boston',\n  url: React.createElement(\"a\", {\n    href: \"https://hillsong.com/boston/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Hillsong\"),\n  denomination: 'Non-denomination',\n  address: '279 Tremont St, Boston, MA 02116',\n  times: '1:00pm-2:30pm'\n}, {\n  id: 11,\n  name: 'Menonnite Congregation of Boston',\n  url: React.createElement(\"a\", {\n    href: \"https://mennonitecongregationofboston.org/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Menonnite Congregation of Boston\"),\n  denomination: 'Menonite',\n  address: '1555 Massachusetts Ave, Cambridge, MA 02138',\n  times: '5:00pm-6:30pm'\n}];\n\nclass ChurchList extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      search: ''\n    };\n    this.filteredChurches = churches;\n  } //function that updates search based on user input\n\n\n  updateSearch(event) {\n    this.setState({\n      search: event.target.value\n    });\n  } //filter the churches based on the typed entry (lower-case version is matched) \n\n\n  render() {\n    this.filteredChurches = churches.filter(church => {\n      return church.name.toLowerCase().indexOf(this.state.search.toLowerCase()) !== -1;\n    }); //displays search bar, and table of filtered churches\n\n    return React.createElement(\"div\", {\n      className: \"church-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Search for nearby churches!\"), React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.search,\n      onChange: this.updateSearch.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"church-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, this.filteredChurches.map(church => {\n      return React.createElement(Church, {\n        church: church,\n        key: church.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      });\n    })))), React.createElement(Map, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default ChurchList;","map":{"version":3,"sources":["/Users/myunginlee/Documents/projects/aacf-website/client/src/components/Church/ChurchList.js"],"names":["React","Church","Map","churches","id","name","url","denomination","address","times","ChurchList","Component","constructor","state","search","filteredChurches","updateSearch","event","setState","target","value","render","filter","church","toLowerCase","indexOf","bind","map"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './ChurchList.css';\nimport Church from './Church';\nimport Map from '../Map/Map';\n\nlet churches = [{\n  id: 1,\n  name: 'Citylife',\n  url:<a href=\"/citylife\">Citylife</a>, \n  denomination: 'Presbyterian',\n  address: '200 Stuart St, Boston, MA 02116',\n  times: '10:30am-12:00pm'\n}, {\n  id: 2,\n  name: 'Aletheia',\n  url: <a href=\"/aletheia\">Aletheia</a>,\n  denomination: 'Non-Denomination',\n  address: '820 Massachusetts Ave, Cambridge, MA 02139',\n  times: '9:00am-10:30am'\n}, {\n  id: 3,\n  name: 'Symphony',\n  url: <a href=\"/symphony\">Symphony</a>,\n  denomination: 'Non-Denomination',\n  address: '971 Commonwealth Avenue, Boston, MA 02215',\n  times: '11:00am-12:30pm'\n}, {\n  id: 4,\n  name: 'St. Paul',\n  url: <a href=\"https://stpaulparish.org/\">St. Paul</a>,\n  denomination: 'Catholic',\n  address: '29 Mt Auburn St, Cambridge, MA 02138',\n  times: '9:30am-12:00pm'\n}, {\n  id: 5,\n  name: 'Cambridge Community Church Fellowship (CCFC)',\n  url: <a href=\"https://ccfc-church.org/\">Cambridge Community Church Fellowship (CCFC)</a>,\n  denomination: 'Evangelical',\n  address: '234 Franklin St, Cambridge, MA 02139',\n  times: '1:00pm-2:30pm'\n}, {\n  id: 6,\n  name: 'Highrock Church',\n  url: <a href=\"https://www.highrockcambridge.org/\">Highrock Church</a>,\n  denomination: 'Evangelical',\n  address: '50 Quincy St, Cambridge, MA 02139',\n  times: '9:00am-10:30am'\n}, {\n  id: 7,\n  name: 'Park Street Church',\n  url: <a href=\"https://www.parkstreet.org/\">Park Street Church</a>,\n  denomination: 'Evangelical',\n  address: '1 Park St, Boston, MA 02108',\n  times: '10:30am-12:00pm'\n}, {\n  id: 8,\n  name: 'Pentecostal Tabernacle',\n  url: <a href=\"http://ptspice.org/\">Pentecostal Tabernacle</a>,\n  denomination: 'Assemblies of God',\n  address: '56 Magazine St, Cambridge, MA 02139',\n  times: '8:30am-10:00am'\n}, {\n  id: 9,\n  name: 'Hope Fellowship Church',\n  url: <a href=\"https://www.hopefellowshipchurch.org/\">Hope Fellowship Church</a>,\n  denomination: 'Baptist',\n  address: '16 Beech St, Cambridge, MA 02140',\n  times: '11:00am-12:30pm'\n}, {\n  id: 10,\n  name: 'Hillsong Church Boston',\n  url: <a href=\"https://hillsong.com/boston/\">Hillsong</a>,\n  denomination: 'Non-denomination',\n  address: '279 Tremont St, Boston, MA 02116',\n  times: '1:00pm-2:30pm'\n}, {\n  id: 11,\n  name: 'Menonnite Congregation of Boston',\n  url: <a href=\"https://mennonitecongregationofboston.org/\">Menonnite Congregation of Boston</a>,\n  denomination: 'Menonite',\n  address: '1555 Massachusetts Ave, Cambridge, MA 02138',\n  times: '5:00pm-6:30pm'\n}]\n\nclass ChurchList extends React.Component {\n  constructor() {\n      super();\n      this.state = {\n      search: '',\n     \n      } \n      this.filteredChurches = churches;\n\n  }\n\n  //function that updates search based on user input\n  updateSearch(event) {\n      this.setState({search: event.target.value});\n  }\n\n  //filter the churches based on the typed entry (lower-case version is matched) \n  render() {\n    this.filteredChurches = churches.filter(\n        (church) => {\n            return church.name.toLowerCase().indexOf(this.state.search.toLowerCase()) !== -1;\n        }\n    );\n\n    //displays search bar, and table of filtered churches\n    return (\n      <div className=\"church-list\">\n        <h1>Search for nearby churches!</h1>\n        <input type='text' \n          value={this.state.search}\n          onChange={this.updateSearch.bind(this)}>\n        </input>\n        <div className=\"church-info\">\n          <ul>\n          <table>\n            {this.filteredChurches.map((church)=>{\n                return <Church church={church} key={church.id}/>\n            })}\n            </table>\n          </ul>\n        </div>\n        <Map />\n\n      </div>\n    );\n  }\n}\n\nexport default ChurchList;"]},"metadata":{},"sourceType":"module"}