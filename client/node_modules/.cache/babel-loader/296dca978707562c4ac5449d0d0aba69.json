{"ast":null,"code":"var _jsxFileName = \"/Users/myunginlee/Documents/projects/aacf-website/client/src/components/Church/Aletheia.js\";\nimport React from 'react';\nimport './Churches.css';\nimport nl2br from 'react-newline-to-break';\nimport '../../pages/Members/Members.css';\nimport Member from '../../pages/Members/Member';\nimport \"./Churches.css\";\n\nclass Aletheia extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      members: []\n    };\n  }\n\n  componentDidMount() {\n    this.fetchMembers();\n  } //query request for the data points for each member \n\n\n  fetchMembers() {\n    const requestBody = {\n      query: \"\\n                query {\\n                    members {\\n                        firstName\\n                        lastName\\n                        email\\n                        church\\n                        year\\n                    }\\n                }\\n            \"\n    };\n    fetch('http://localhost:5000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      return res.json();\n    }).then(resData => {\n      return this.setState({\n        members: resData.data.members\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  render() {\n    let city = \"Aletheia is a non-denominational church located between MIT and Harvard. Because of this, many undergraduates from both Harvard and MIT go to Aletheia. Led by Pastor Adam Marbury, Aletheia is a fast-growing church with a mission to equip and teach members with the gospel. Aletheia adopts a more contemporary style of worship, and also attracts a diverse membership body. Pastor Adam is known for his applicable and convicting sermons, and the worship band is always prepared with contemporary music styles. If you're looking for a great service at a terrific location, check out Aletheia. \\n\";\n    let direct = \"\\nFrom Harvard Yard:\\n\\nWalk to Adam's Oaktel near Hong Kong Restaurant and walk along Mass Ave for approximately 1 mile.\\n\";\n    let web = \"aletheia.org\\n\";\n    return React.createElement(\"div\", {\n      className: \"churches-outer-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"churches-inner-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"churches-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      style: {\n        textAlign: \"left\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Aletheia\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, nl2br(city), \"Website: \", React.createElement(\"a\", {\n      href: \"https://www.aletheia.org/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, nl2br(web))), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Directions\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, nl2br(direct)), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Meetup: Outside Hong Kong restuarant 15 minutes before service starts\"), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Aletheia Attendees \"), React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, this.state.members.map(member => {\n      if (member.church === \"Aletheia\") return React.createElement(Member, {\n        member: member,\n        key: member.email,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      });\n    })))))));\n  }\n\n}\n\nexport default Aletheia;","map":{"version":3,"sources":["/Users/myunginlee/Documents/projects/aacf-website/client/src/components/Church/Aletheia.js"],"names":["React","nl2br","Member","Aletheia","Component","state","members","componentDidMount","fetchMembers","requestBody","query","fetch","method","body","JSON","stringify","headers","then","res","json","resData","setState","data","catch","err","console","log","render","city","direct","web","textAlign","map","member","church","email"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,gBAAP;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAO,iCAAP;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAO,gBAAP;;AACA,MAAMC,QAAN,SAAuBH,KAAK,CAACI,SAA7B,CAAuC;AAAA;AAAA;AAAA,SAEnCC,KAFmC,GAE3B;AACJC,MAAAA,OAAO,EAAE;AADL,KAF2B;AAAA;;AAMnCC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,YAAL;AACH,GARkC,CAUnC;;;AAEAA,EAAAA,YAAY,GAAG;AACX,UAAMC,WAAW,GAAG;AAChBC,MAAAA,KAAK;AADW,KAApB;AAcAC,IAAAA,KAAK,CAAC,+BAAD,EAAkC;AACnCC,MAAAA,MAAM,EAAE,MAD2B;AAEnCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,WAAf,CAF6B;AAGnCO,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AAH0B,KAAlC,CAAL,CAMGC,IANH,CAMQC,GAAG,IAAI;AACX,aAAOA,GAAG,CAACC,IAAJ,EAAP;AACH,KARD,EAQGF,IARH,CAQQG,OAAO,IAAI;AACf,aAAO,KAAKC,QAAL,CAAc;AAAEf,QAAAA,OAAO,EAAEc,OAAO,CAACE,IAAR,CAAahB;AAAxB,OAAd,CAAP;AACH,KAVD,EAUGiB,KAVH,CAUSC,GAAG,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,KAZD;AAaH;;AAEDG,EAAAA,MAAM,GAAG;AACL,QAAIC,IAAI,qlBAAR;AACA,QAAIC,MAAM,GAAG,6HAAb;AACA,QAAIC,GAAG,GAAI,gBAAX;AACA,WACI;AAAK,MAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAK,MAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,KAAK,EAAE;AAACC,QAAAA,SAAS,EAAE;AAAZ,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK9B,KAAK,CAAC2B,IAAD,CADV,eAEa;AAAG,MAAA,IAAI,EAAC,2BAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqC3B,KAAK,CAAC6B,GAAD,CAA1C,CAFb,CAJJ,EAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBARJ,EAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK7B,KAAK,CAAC4B,MAAD,CADV,CAXJ,EAcI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+EAdJ,EAmBY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAnBZ,EAoBY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEK,KAAKxB,KAAL,CAAWC,OAAX,CAAmB0B,GAAnB,CAAuBC,MAAM,IAAI;AAC9B,UAAGA,MAAM,CAACC,MAAP,KAAkB,UAArB,EACI,OAAO,oBAAC,MAAD;AAAQ,QAAA,MAAM,EAAED,MAAhB;AAAwB,QAAA,GAAG,EAAEA,MAAM,CAACE,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACP,KAHA,CAFL,CADJ,CApBZ,CADI,CADJ,CADA,CADJ;AAsCH;;AApFkC;;AAuFvC,eAAehC,QAAf","sourcesContent":["import React from 'react';\nimport './Churches.css';\nimport nl2br from 'react-newline-to-break'; \nimport '../../pages/Members/Members.css';\nimport Member from '../../pages/Members/Member';\nimport \"./Churches.css\"\nclass Aletheia extends React.Component {\n\n    state = {\n        members: []\n    };\n\n    componentDidMount() {\n        this.fetchMembers();\n    }\n\n    //query request for the data points for each member \n\n    fetchMembers() {\n        const requestBody = {\n            query: `\n                query {\n                    members {\n                        firstName\n                        lastName\n                        email\n                        church\n                        year\n                    }\n                }\n            `\n        }\n\n        fetch('http://localhost:5000/graphql', {\n            method: 'POST',\n            body: JSON.stringify(requestBody),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then(res => {\n            return res.json()\n        }).then(resData => {\n            return this.setState({ members: resData.data.members })\n        }).catch(err => {\n            console.log(err);\n        })\n    }\n\n    render() {\n        let city = `Aletheia is a non-denominational church located between MIT and Harvard. Because of this, many undergraduates from both Harvard and MIT go to Aletheia. Led by Pastor Adam Marbury, Aletheia is a fast-growing church with a mission to equip and teach members with the gospel. Aletheia adopts a more contemporary style of worship, and also attracts a diverse membership body. Pastor Adam is known for his applicable and convicting sermons, and the worship band is always prepared with contemporary music styles. If you're looking for a great service at a terrific location, check out Aletheia. \\n`;\n        let direct = \"\\nFrom Harvard Yard:\\n\\nWalk to Adam's Oaktel near Hong Kong Restaurant and walk along Mass Ave for approximately 1 mile.\\n\";\n        let web  = \"aletheia.org\\n\";\n        return (\n            <div className=\"churches-outer-container\">\n            <div className=\"churches-inner-container\">\n                <div className=\"churches-body\">\n            <div>\n                <h1 style={{textAlign: \"left\"}}> \n                    Aletheia \n                </h1>\n                <p>\n                    {nl2br(city)}\n                    Website: <a href=\"https://www.aletheia.org/\">{nl2br(web)}</a>\n                </p>\n                <h2>\n                    Directions\n                </h2>\n                <p>\n                    {nl2br(direct)}\n                </p>\n                <h3>\n                    Meetup: Outside Hong Kong restuarant 15 minutes before service starts\n                </h3>\n\n               \n                        <h1>Aletheia Attendees </h1>\n                        <table>\n                            <tbody>\n                                {/* key mapped if member attends Aletheia */}\n                                {this.state.members.map(member => {\n                                    if(member.church === \"Aletheia\")\n                                        return <Member member={member} key={member.email} />\n                                })}\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n            </div>         \n        );\n    };\n\n}\nexport default Aletheia;"]},"metadata":{},"sourceType":"module"}