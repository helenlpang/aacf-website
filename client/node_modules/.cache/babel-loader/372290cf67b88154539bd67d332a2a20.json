{"ast":null,"code":"import _classCallCheck from\"/Users/myunginlee/Documents/projects/aacf-website/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/myunginlee/Documents/projects/aacf-website/client/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/myunginlee/Documents/projects/aacf-website/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/myunginlee/Documents/projects/aacf-website/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/myunginlee/Documents/projects/aacf-website/client/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import'./Churches.css';import nl2br from'react-newline-to-break';import'../../pages/Members/Members.css';import Member from'../../pages/Members/Member';import'react-bootstrap';var City=/*#__PURE__*/function(_React$Component){_inherits(City,_React$Component);function City(){var _getPrototypeOf2;var _this;_classCallCheck(this,City);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(City)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={members:[]};return _this;}_createClass(City,[{key:\"componentDidMount\",value:function componentDidMount(){this.fetchMembers();}},{key:\"fetchMembers\",value:function fetchMembers(){var _this2=this;var requestBody={query:\"\\n                query {\\n                    members {\\n                        firstName\\n                        lastName\\n                        email\\n                        church\\n                        year\\n                    }\\n                }\\n            \"};fetch('http://localhost:5000/graphql',{method:'POST',body:JSON.stringify(requestBody),headers:{'Content-Type':'application/json'}}).then(function(res){return res.json();}).then(function(resData){return _this2.setState({members:resData.data.members});}).catch(function(err){console.log(err);});}//citylife information\n//display is based on the churches.css file\n},{key:\"render\",value:function render(){var city=\"Citylife is a Presbyterian church found a couple minutes away from Park street.\\n        With a high view of Scripture, Citylife adheres to a Reformed view of the Bible\\n        and the parts of their service are also oriented around Scripture. Citylife is\\n        on the traditional side; however they still have many contemporary elements such as a praise band and modern songs along with hymns. Head Pastor Stephen Um gives sermons and so does Assistant Pastor David Cho. If you're looking for a church deeply rooted in Scripture, be sure to check out Citylife! \\n\";var direct=\"\\nFrom John Harvard Statue:\\n\\nWalk to the T station in Harvard Square. \\n        Get off at Park Street stop. Walk straight, past Boloco until you reach the Revere hotel. Go up to the 5th floor.\\n\";var web=\"citylifeboston.org\\n\";return React.createElement(\"div\",{className:\"churches-outer-container\"},React.createElement(\"div\",{className:\"churches-inner-container\"},React.createElement(\"div\",{className:\"churches-body\"},React.createElement(\"div\",null,React.createElement(\"h1\",{style:{textAlign:\"left\"}},\"Citylife\"),React.createElement(\"p\",null,nl2br(city),\"Website: \",React.createElement(\"a\",{href:\"http://www.citylifeboston.org/\"},nl2br(web))),React.createElement(\"h2\",null,\"Directions\"),React.createElement(\"p\",null,nl2br(direct)),React.createElement(\"h3\",null,\"Meetup: John Harvard Statue at 9:45am.\"),React.createElement(\"h1\",null,\"Citylife Attendees \"),React.createElement(\"table\",null,React.createElement(\"tbody\",null,this.state.members.map(function(member){if(member.church===\"Citylife\")return React.createElement(Member,{member:member,key:member.email});})))))));}}]);return City;}(React.Component);export default City;","map":{"version":3,"sources":["/Users/myunginlee/Documents/projects/aacf-website/client/src/components/Church/City.js"],"names":["React","nl2br","Member","City","state","members","fetchMembers","requestBody","query","fetch","method","body","JSON","stringify","headers","then","res","json","resData","setState","data","catch","err","console","log","city","direct","web","textAlign","map","member","church","email","Component"],"mappings":"qsBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,gBAAP,CACA,MAAOC,CAAAA,KAAP,KAAkB,wBAAlB,CACA,MAAO,iCAAP,CACA,MAAOC,CAAAA,MAAP,KAAmB,4BAAnB,CACA,MAAO,iBAAP,C,GAEMC,CAAAA,I,mYAEFC,K,CAAQ,CACJC,OAAO,CAAE,EADL,C,6FAIY,CAChB,KAAKC,YAAL,GACH,C,mDAEc,iBACX,GAAMC,CAAAA,WAAW,CAAG,CAChBC,KAAK,qRADW,CAApB,CAcAC,KAAK,CAAC,+BAAD,CAAkC,CACnCC,MAAM,CAAE,MAD2B,CAEnCC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeN,WAAf,CAF6B,CAGnCO,OAAO,CAAE,CACL,eAAgB,kBADX,CAH0B,CAAlC,CAAL,CAMGC,IANH,CAMQ,SAAAC,GAAG,CAAI,CACX,MAAOA,CAAAA,GAAG,CAACC,IAAJ,EAAP,CACH,CARD,EAQGF,IARH,CAQQ,SAAAG,OAAO,CAAI,CACf,MAAO,CAAA,MAAI,CAACC,QAAL,CAAc,CAAEd,OAAO,CAAEa,OAAO,CAACE,IAAR,CAAaf,OAAxB,CAAd,CAAP,CACH,CAVD,EAUGgB,KAVH,CAUS,SAAAC,GAAG,CAAI,CACZC,OAAO,CAACC,GAAR,CAAYF,GAAZ,EACH,CAZD,EAaH,CAED;AACA;uCACS,CACL,GAAIG,CAAAA,IAAI,2jBAAR,CAIA,GAAIC,CAAAA,MAAM,wMAAV,CAEA,GAAIC,CAAAA,GAAG,CAAG,sBAAV,CACA,MACI,4BAAK,SAAS,CAAC,0BAAf,EACA,2BAAK,SAAS,CAAC,0BAAf,EACI,2BAAK,SAAS,CAAC,eAAf,EAEJ,+BAGI,0BAAI,KAAK,CAAE,CAACC,SAAS,CAAE,MAAZ,CAAX,aAHJ,CAOI,6BACK3B,KAAK,CAACwB,IAAD,CADV,aAEa,yBAAG,IAAI,CAAC,gCAAR,EAA0CxB,KAAK,CAAC0B,GAAD,CAA/C,CAFb,CAPJ,CAWI,2CAXJ,CAcI,6BACK1B,KAAK,CAACyB,MAAD,CADV,CAdJ,CAiBI,uEAjBJ,CAoBY,oDApBZ,CAqBY,iCACI,iCAEK,KAAKtB,KAAL,CAAWC,OAAX,CAAmBwB,GAAnB,CAAuB,SAAAC,MAAM,CAAI,CAC9B,GAAGA,MAAM,CAACC,MAAP,GAAkB,UAArB,CACI,MAAO,qBAAC,MAAD,EAAQ,MAAM,CAAED,MAAhB,CAAwB,GAAG,CAAEA,MAAM,CAACE,KAApC,EAAP,CACP,CAHA,CAFL,CADJ,CArBZ,CAFI,CADJ,CADA,CADJ,CAyCH,C,kBA3FchC,KAAK,CAACiC,S,EA+FzB,cAAe9B,CAAAA,IAAf","sourcesContent":["import React from 'react';\nimport './Churches.css';\nimport nl2br from 'react-newline-to-break'; \nimport '../../pages/Members/Members.css';\nimport Member from '../../pages/Members/Member';\nimport 'react-bootstrap'\n\nclass City extends React.Component {\n\n    state = {\n        members: []\n    };\n\n    componentDidMount() {\n        this.fetchMembers();\n    }\n\n    fetchMembers() {\n        const requestBody = {\n            query: `\n                query {\n                    members {\n                        firstName\n                        lastName\n                        email\n                        church\n                        year\n                    }\n                }\n            `\n        }\n\n        fetch('http://localhost:5000/graphql', {\n            method: 'POST',\n            body: JSON.stringify(requestBody),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then(res => {\n            return res.json()\n        }).then(resData => {\n            return this.setState({ members: resData.data.members })\n        }).catch(err => {\n            console.log(err);\n        })\n    }\n\n    //citylife information\n    //display is based on the churches.css file\n    render() {\n        let city = `Citylife is a Presbyterian church found a couple minutes away from Park street.\n        With a high view of Scripture, Citylife adheres to a Reformed view of the Bible\n        and the parts of their service are also oriented around Scripture. Citylife is\n        on the traditional side; however they still have many contemporary elements such as a praise band and modern songs along with hymns. Head Pastor Stephen Um gives sermons and so does Assistant Pastor David Cho. If you're looking for a church deeply rooted in Scripture, be sure to check out Citylife! \\n`;\n        let direct = `\\nFrom John Harvard Statue:\\n\\nWalk to the T station in Harvard Square. \n        Get off at Park Street stop. Walk straight, past Boloco until you reach the Revere hotel. Go up to the 5th floor.\\n`;\n        let web = \"citylifeboston.org\\n\";\n        return (\n            <div className=\"churches-outer-container\">\n            <div className=\"churches-inner-container\">\n                <div className=\"churches-body\">\n            \n            <div>\n\n                 \n                <h1 style={{textAlign: \"left\"}}> \n                    Citylife \n               </h1>\n\n                <p>\n                    {nl2br(city)}\n                    Website: <a href=\"http://www.citylifeboston.org/\">{nl2br(web)}</a>\n                </p>\n                <h2>\n                    Directions\n                </h2>\n                <p>\n                    {nl2br(direct)}\n                </p>\n                <h3>\n                    Meetup: John Harvard Statue at 9:45am. \n                </h3>\n                        <h1>Citylife Attendees </h1>\n                        <table>\n                            <tbody>\n                            \n                                {this.state.members.map(member => {\n                                    if(member.church === \"Citylife\")\n                                        return <Member member={member} key={member.email}/>\n                                })}\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div> \n            </div>           \n            \n        );\n    };\n}\n\n\nexport default City;"]},"metadata":{},"sourceType":"module"}