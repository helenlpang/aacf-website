{"ast":null,"code":"import _slicedToArray from \"/Users/myunginlee/Documents/projects/aacf-website/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/myunginlee/Documents/projects/aacf-website/src/components/Map/Map.js\";\nimport React, { useState } from 'react';\nimport { GoogleMap, withScriptjs, withGoogleMap, Marker, InfoWindow } from \"react-google-maps\";\nimport * as parksData from \"../../data/skateparks.json\";\nimport mapStyles from \"../../mapStyles\";\n\nfunction Map() {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        selectedChurch = _useState2[0],\n        setSelectedChurch = _useState2[1];\n\n  return React.createElement(GoogleMap, {\n    defaultZoom: 14,\n    defaultCenter: {\n      lat: 42.3736,\n      lng: -71.1097\n    },\n    defaultOptions: {\n      styles: mapStyles\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, parksData.features.map(church => React.createElement(Marker, {\n    key: church.properties.PARK_ID,\n    position: {\n      lat: church.geometry.coordinates[1],\n      lng: church.geometry.coordinates[0]\n    },\n    onClick: () => {\n      setSelectedChurch(church);\n    },\n    icon: {\n      url: '/church.png',\n      scaledSize: new window.google.maps.Size(25, 25)\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  })), selectedChurch && React.createElement(InfoWindow, {\n    position: {\n      lat: selectedChurch.geometry.coordinates[1],\n      lng: selectedChurch.geometry.coordinates[0]\n    },\n    onCloseClick: () => {\n      setSelectedChurch(null);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, selectedChurch.properties.NAME), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, selectedChurch.properties.DESCRIPTIO))));\n}\n\nconst WrappedMap = withScriptjs(withGoogleMap(Map));\n\nclass FinalMap extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      style: {\n        width: \"40vw\",\n        height: \"40vh\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(WrappedMap, {\n      googleMapURL: \"https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=AIzaSyASigF8g5y-u4pWOqF41qMmiF2gWBQCUVw\",\n      loadingElement: React.createElement(\"div\", {\n        style: {\n          height: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }),\n      containerElement: React.createElement(\"div\", {\n        style: {\n          height: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }),\n      mapElement: React.createElement(\"div\", {\n        style: {\n          height: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default FinalMap;","map":{"version":3,"sources":["/Users/myunginlee/Documents/projects/aacf-website/src/components/Map/Map.js"],"names":["React","useState","GoogleMap","withScriptjs","withGoogleMap","Marker","InfoWindow","parksData","mapStyles","Map","selectedChurch","setSelectedChurch","lat","lng","styles","features","map","church","properties","PARK_ID","geometry","coordinates","url","scaledSize","window","google","maps","Size","NAME","DESCRIPTIO","WrappedMap","FinalMap","Component","render","width","height"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nimport { \n    GoogleMap, \n    withScriptjs, \n    withGoogleMap, \n    Marker,\n    InfoWindow\n  } from \"react-google-maps\";\n\nimport * as parksData from \"../../data/skateparks.json\"\nimport mapStyles from \"../../mapStyles\";\n\nfunction Map() {\n    const [selectedChurch, setSelectedChurch] = useState(null);\n  \n    return (\n      <GoogleMap\n        defaultZoom={14}\n        defaultCenter={{ lat: 42.3736, lng: -71.1097 }}\n        defaultOptions={{styles: mapStyles}}\n      >\n        {parksData.features.map(church => (\n          <Marker key = {church.properties.PARK_ID} position={{ \n            lat: church.geometry.coordinates[1],\n            lng: church.geometry.coordinates[0], \n            }} \n            onClick={() => {\n              setSelectedChurch(church);\n            }}\n            icon={{\n              url: '/church.png',\n              scaledSize: new window.google.maps.Size(25,25) \n            }}\n          />\n        ))}\n  \n        {selectedChurch && (\n          <InfoWindow\n            position={{ \n              lat: selectedChurch.geometry.coordinates[1],\n              lng: selectedChurch.geometry.coordinates[0], \n            }} \n            onCloseClick={() => {\n              setSelectedChurch(null);\n            }}\n          >\n            <div>\n              <h2>{selectedChurch.properties.NAME}</h2>\n              <p>{selectedChurch.properties.DESCRIPTIO}</p>\n            </div>\n          </InfoWindow>\n        )}\n      </GoogleMap>\n    );\n  }\n  \n  const WrappedMap = withScriptjs(withGoogleMap(Map));\n\n  class FinalMap extends React.Component {\n    render() {\n      return (\n        <div style = {{ width: \"40vw\", height: \"40vh\"}}>\n          <WrappedMap \n            googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=AIzaSyASigF8g5y-u4pWOqF41qMmiF2gWBQCUVw`}\n            loadingElement={<div style={{ height: \"100%\" }} /> }\n            containerElement={<div style={{ height: \"100%\" }} /> }\n            mapElement={<div style={{ height: \"100%\" }} /> }\n          />\n        </div>\n      )\n    }\n  }\n\n  export default FinalMap;"]},"metadata":{},"sourceType":"module"}