{"ast":null,"code":"import _defineProperty from \"/Users/myunginlee/Documents/projects/aacf-website/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/myunginlee/Documents/projects/aacf-website/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/myunginlee/Documents/projects/aacf-website/client/src/components/Photos/photos.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useCallback } from \"react\";\nimport { render } from \"react-dom\";\nimport Gallery from \"react-photo-gallery\";\nimport Carousel, { Modal, ModalGateway } from \"react-images\";\nimport { photos } from \"./photos2\";\n\nfunction Display() {\n  //built a hook to keep track of states without a class: currentImage/setCurrentImage tracks which image is clicked and viewerIsOpen/setViewerIsOpen tracks whether the image viewer is open   \n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        currentImage = _useState2[0],\n        setCurrentImage = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        viewerIsOpen = _useState4[0],\n        setViewerIsOpen = _useState4[1]; //openLightbox is called if the user opens the special viewing of the picture\n\n\n  const openLightbox = useCallback((event, {\n    photo,\n    index\n  }) => {\n    setCurrentImage(index);\n    setViewerIsOpen(true);\n  }, []); //closeLightbox is called if the user closes the special viewing of the picture\n\n  const closeLightbox = () => {\n    setCurrentImage(0);\n    setViewerIsOpen(false);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(Gallery, {\n    photos: photos,\n    onClick: openLightbox,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), React.createElement(ModalGateway, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, viewerIsOpen ? React.createElement(Modal, {\n    onClose: closeLightbox,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(Carousel, {\n    currentIndex: currentImage //function for photo view\n    ,\n    views: photos.map(x => _objectSpread({}, x)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  })) : null));\n}\n\nclass Photos extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Display, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), \";\");\n  }\n\n}\n\nexport default Photos;","map":{"version":3,"sources":["/Users/myunginlee/Documents/projects/aacf-website/client/src/components/Photos/photos.js"],"names":["React","useState","useCallback","render","Gallery","Carousel","Modal","ModalGateway","photos","Display","currentImage","setCurrentImage","viewerIsOpen","setViewerIsOpen","openLightbox","event","photo","index","closeLightbox","map","x","Photos","Component"],"mappings":";;;;;;;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,QAAP,IAAmBC,KAAnB,EAA0BC,YAA1B,QAA8C,cAA9C;AACA,SAASC,MAAT,QAAuB,WAAvB;;AAEA,SAASC,OAAT,GAAmB;AACnB;AADmB,oBAEuBR,QAAQ,CAAC,CAAD,CAF/B;AAAA;AAAA,QAEVS,YAFU;AAAA,QAEIC,eAFJ;;AAAA,qBAGuBV,QAAQ,CAAC,KAAD,CAH/B;AAAA;AAAA,QAGVW,YAHU;AAAA,QAGIC,eAHJ,kBAKjB;;;AACA,QAAMC,YAAY,GAAGZ,WAAW,CAAC,CAACa,KAAD,EAAQ;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAR,KAA6B;AAC5DN,IAAAA,eAAe,CAACM,KAAD,CAAf;AACAJ,IAAAA,eAAe,CAAC,IAAD,CAAf;AACD,GAH+B,EAG7B,EAH6B,CAAhC,CANiB,CAWnB;;AACE,QAAMK,aAAa,GAAG,MAAM;AAC1BP,IAAAA,eAAe,CAAC,CAAD,CAAf;AACAE,IAAAA,eAAe,CAAC,KAAD,CAAf;AACD,GAHD;;AAKA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,oBAAC,OAAD;AAAS,IAAA,MAAM,EAAEL,MAAjB;AAAyB,IAAA,OAAO,EAAEM,YAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,YAAY,GACX,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAEM,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE,oBAAC,QAAD;AACE,IAAA,YAAY,EAAER,YADhB,CAEP;AAFO;AAGE,IAAA,KAAK,EAAEF,MAAM,CAACW,GAAP,CAAWC,CAAC,sBACdA,CADc,CAAZ,CAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADW,GAYT,IAbN,CAHF,CADF;AAqBD;;AAED,MAAMC,MAAN,SAAqBrB,KAAK,CAACsB,SAA3B,CAAqC;AACpCnB,EAAAA,MAAM,GAAG;AACR,WACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAL,MADA;AAGA;;AALmC;;AAOrC,eAAekB,MAAf","sourcesContent":["\nimport React, { useState, useCallback } from \"react\";\nimport { render } from \"react-dom\";\nimport Gallery from \"react-photo-gallery\";\nimport Carousel, { Modal, ModalGateway } from \"react-images\";\nimport { photos } from \"./photos2\";\n\nfunction Display() {\n//built a hook to keep track of states without a class: currentImage/setCurrentImage tracks which image is clicked and viewerIsOpen/setViewerIsOpen tracks whether the image viewer is open   \n  const [currentImage, setCurrentImage] = useState(0);\n  const [viewerIsOpen, setViewerIsOpen] = useState(false);\n\n  //openLightbox is called if the user opens the special viewing of the picture\n  const openLightbox = useCallback((event, { photo, index }) => {\n    setCurrentImage(index);\n    setViewerIsOpen(true);\n  }, []);\n\n//closeLightbox is called if the user closes the special viewing of the picture\n  const closeLightbox = () => {\n    setCurrentImage(0);\n    setViewerIsOpen(false);\n  };\n\n  return (\n    <div>\n\t{/* makes the photo gallery with openLightbox called if a picture is clicked */}\n      <Gallery photos={photos} onClick={openLightbox} />\n      <ModalGateway>\n        {viewerIsOpen ? (\n          <Modal onClose={closeLightbox}>\n\t\t  \n\t\t  {/* creates carousel feature to go through the pictures */}\n            <Carousel\n              currentIndex={currentImage}\n\t\t\t  //function for photo view\n              views={photos.map(x => ({\n                ...x\n              }))}\n            />\n          </Modal>\n        ) : null}\n      </ModalGateway>\n    </div>\n  );\n}\n\nclass Photos extends React.Component {\n\trender() {\n\t\treturn (\n\t\t<div><Display />;</div>\n\t\t)\n\t}\n}\nexport default Photos;\n\n\n\n"]},"metadata":{},"sourceType":"module"}